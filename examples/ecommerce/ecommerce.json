[
    {
        "_meta": {
            "topic": "users",
            "key": "id",
            "relationships": [
                {
                    "topic": "purchases",
                    "parent_field": "id",
                    "child_field": "user_id",
                    "records_per": 4
                }
            ]
        },
        "id": "faker.datatype.number(1000)",
        "name": "faker.internet.userName()",
        "email": "faker.internet.exampleEmail()",
        "city": "faker.address.city()",
        "state": "faker.address.state()",
        "zipcode": "faker.address.zipCode()"
    },
    {
        "_meta": {
            "topic": "purchases",
            "key": "id",
            "relationships": [
                {
                    "topic": "items",
                    "parent_field": "item_ids",
                    "child_field": "id"
                }
            ]
        },
        "id": "faker.datatype.uuid()",
        "user_id": "this string can be anything since this field is determined by user.id",
        "item_ids": "faker.helpers.uniqueArray((()=>{return Math.floor(Math.random()*5000);}), Math.floor(Math.random()*4+1))",
        "total": "faker.commerce.price(25, 2500)"
    },
    {
        "_meta": {
            "topic": "items",
            "key": "id"
        },
        "id": "this string can be anything since this field is determined by purchases.item_ids",
        "name": "faker.commerce.product()",
        "price": "faker.commerce.price(5, 500)",
        "description": "faker.commerce.productDescription()",
        "material": "faker.commerce.productMaterial()"
    }
]
